# Generated by Django 5.2 on 2025-04-27 19:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20, verbose_name='status')),
                ('payment_complete', models.BooleanField(default=False, verbose_name='payment complete')),
                ('coupon_applied', models.CharField(blank=True, max_length=50, null=True, verbose_name='coupon code')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='discount amount')),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='final price')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='rating')),
                ('comments', models.TextField(blank=True, verbose_name='comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='learning_sessions.booking')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('start_time', models.DateTimeField(verbose_name='start time')),
                ('end_time', models.DateTimeField(verbose_name='end time')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('max_participants', models.PositiveIntegerField(default=1, verbose_name='maximum participants')),
                ('current_participants', models.PositiveIntegerField(default=0, verbose_name='current participants')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20, verbose_name='status')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=255, verbose_name='tags')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='users.mentorprofile')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='learning_sessions.session'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['start_time'], name='learning_se_start_t_aa5c82_idx'),
        ),
        migrations.AddIndex(
            model_name='session',
            index=models.Index(fields=['status'], name='learning_se_status_e00ad0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='booking',
            unique_together={('session', 'learner')},
        ),
    ]
